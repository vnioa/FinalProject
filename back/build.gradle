plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.netflix.dgs.codegen' version '7.0.3'
	id 'org.hibernate.orm' version '6.6.4.Final'
	id 'org.graalvm.buildtools.native' version '0.10.4'
	id 'gg.jte.gradle' version '3.1.12'
	id 'org.cyclonedx.bom' version '1.10.0'
	id 'org.springframework.cloud.contract' version '4.2.0'
	id 'com.google.protobuf' version '0.9.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'com.vaadin' version '24.6.2'
}

group = 'com.studymate'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('netflixDgsVersion', "10.0.1")
	set('springAiVersion', "1.0.0-M4")
	set('springBootAdminVersion', "3.4.1")
	set('springCloudAzureVersion', "5.19.0")
	set('springCloudServicesVersion', "4.2.0")
	set('springCloudVersion', "2024.0.0")
	set('springGrpcVersion', "0.3.0")
	set('springModulithVersion', "1.3.1")
	set('springShellVersion', "3.4.0")
	set('vaadinVersion', "24.6.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-activemq'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-artemis'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-couchbase'
	implementation 'org.springframework.boot:spring-boot-starter-data-couchbase-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-groovy-templates'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-pulsar'
	implementation 'org.springframework.boot:spring-boot-starter-pulsar-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-rsocket'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'com.azure.spring:spring-cloud-azure-starter'
	implementation 'com.azure.spring:spring-cloud-azure-starter-active-directory'
	implementation 'com.azure.spring:spring-cloud-azure-starter-actuator'
	implementation 'com.azure.spring:spring-cloud-azure-starter-data-cosmos'
	implementation 'com.azure.spring:spring-cloud-azure-starter-integration-storage-queue'
	implementation 'com.azure.spring:spring-cloud-azure-starter-jdbc-mysql'
	implementation 'com.azure.spring:spring-cloud-azure-starter-jdbc-postgresql'
	implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault'
	implementation 'com.azure.spring:spring-cloud-azure-starter-storage'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'
	implementation 'com.vaadin:vaadin-spring-boot-starter'
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
	implementation 'gg.jte:jte:3.1.12'
	implementation 'gg.jte:jte-spring-boot-starter-3:3.1.12'
	implementation 'io.github.wimdeblauwe:htmx-spring-boot-thymeleaf:4.0.1'
	implementation 'io.grpc:grpc-services'
	implementation 'io.pivotal.spring.cloud:spring-cloud-services-starter-config-client'
	implementation 'io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry'
	implementation 'org.apache.camel.springboot:camel-spring-boot-starter:4.9.0'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-db2'
	implementation 'org.flywaydb:flyway-database-derby'
	implementation 'org.flywaydb:flyway-database-hsqldb'
	implementation 'org.flywaydb:flyway-database-oracle'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'org.flywaydb:flyway-sqlserver'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	implementation 'org.springframework.ai:spring-ai-anthropic-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-azure-openai-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-azure-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-bedrock-ai-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-bedrock-converse-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-cassandra-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-chroma-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-elasticsearch-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-markdown-document-reader'
	implementation 'org.springframework.ai:spring-ai-milvus-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-mistral-ai-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-mongodb-atlas-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-neo4j-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-oracle-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-pdf-document-reader'
	implementation 'org.springframework.ai:spring-ai-pgvector-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-pinecone-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-postgresml-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-qdrant-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-redis-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-stability-ai-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-tika-document-reader'
	implementation 'org.springframework.ai:spring-ai-transformers-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-typesense-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-vertex-ai-embedding-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-vertex-ai-gemini-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-weaviate-store-spring-boot-starter'
	implementation 'org.springframework.amqp:spring-rabbit-stream'
	implementation 'org.springframework.cloud:spring-cloud-bus'
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	implementation 'org.springframework.cloud:spring-cloud-function-web'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-task'
	implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-zookeeper-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-zookeeper-discovery'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-pulsar'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
	implementation 'org.springframework.integration:spring-integration-amqp'
	implementation 'org.springframework.integration:spring-integration-http'
	implementation 'org.springframework.integration:spring-integration-jdbc'
	implementation 'org.springframework.integration:spring-integration-jms'
	implementation 'org.springframework.integration:spring-integration-jpa'
	implementation 'org.springframework.integration:spring-integration-kafka'
	implementation 'org.springframework.integration:spring-integration-mail'
	implementation 'org.springframework.integration:spring-integration-mongodb'
	implementation 'org.springframework.integration:spring-integration-r2dbc'
	implementation 'org.springframework.integration:spring-integration-redis'
	implementation 'org.springframework.integration:spring-integration-rsocket'
	implementation 'org.springframework.integration:spring-integration-stomp'
	implementation 'org.springframework.integration:spring-integration-webflux'
	implementation 'org.springframework.integration:spring-integration-websocket'
	implementation 'org.springframework.integration:spring-integration-ws'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.modulith:spring-modulith-events-api'
	implementation 'org.springframework.modulith:spring-modulith-starter-core'
	implementation 'org.springframework.modulith:spring-modulith-starter-jdbc'
	implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
	implementation 'org.springframework.modulith:spring-modulith-starter-mongodb'
	implementation 'org.springframework.security:spring-security-messaging'
	implementation 'org.springframework.security:spring-security-messaging'
	implementation 'org.springframework.security:spring-security-rsocket'
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'org.springframework.shell:spring-shell-starter'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	developmentOnly 'com.azure.spring:spring-cloud-azure-docker-compose'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.ibm.db2:jcc'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	runtimeOnly 'com.oracle.database.r2dbc:oracle-r2dbc'
	runtimeOnly 'io.asyncer:r2dbc-mysql'
	runtimeOnly 'io.r2dbc:r2dbc-h2'
	runtimeOnly 'io.r2dbc:r2dbc-mssql:1.0.0.RELEASE'
	runtimeOnly 'org.apache.derby:derby'
	runtimeOnly 'org.apache.derby:derbytools'
	runtimeOnly 'org.hsqldb:hsqldb'
	runtimeOnly 'org.mariadb:r2dbc-mariadb:1.1.3'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'
	developmentOnly 'org.springframework.ai:spring-ai-spring-boot-docker-compose'
	runtimeOnly 'org.springframework.modulith:spring-modulith-actuator'
	runtimeOnly 'org.springframework.modulith:spring-modulith-events-jms'
	runtimeOnly 'org.springframework.modulith:spring-modulith-observability'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'com.azure.spring:spring-cloud-azure-testcontainers'
	testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter-test'
	testImplementation 'com.unboundid:unboundid-ldapsdk'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'io.rest-assured:spring-web-test-client'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework.ai:spring-ai-spring-boot-testcontainers'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'org.springframework.grpc:spring-grpc-test'
	testImplementation 'org.springframework.integration:spring-integration-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.shell:spring-shell-starter-test'
	testImplementation 'org.testcontainers:activemq'
	testImplementation 'org.testcontainers:cassandra'
	testImplementation 'org.testcontainers:chromadb'
	testImplementation 'org.testcontainers:consul'
	testImplementation 'org.testcontainers:couchbase'
	testImplementation 'org.testcontainers:db2'
	testImplementation 'org.testcontainers:elasticsearch'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:kafka'
	testImplementation 'org.testcontainers:mariadb'
	testImplementation 'org.testcontainers:milvus'
	testImplementation 'org.testcontainers:mongodb'
	testImplementation 'org.testcontainers:mssqlserver'
	testImplementation 'org.testcontainers:mysql'
	testImplementation 'org.testcontainers:neo4j'
	testImplementation 'org.testcontainers:ollama'
	testImplementation 'org.testcontainers:oracle-free'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:pulsar'
	testImplementation 'org.testcontainers:qdrant'
	testImplementation 'org.testcontainers:r2dbc'
	testImplementation 'org.testcontainers:rabbitmq'
	testImplementation 'org.testcontainers:vault'
	testImplementation 'org.testcontainers:weaviate'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
		mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
		mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
		mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
	packageName = 'com.studymate.back.codegen'
	generateClient = true
}

hibernate {
	enhancement {
		enableAssociationManagement = true
	}
}

jte {
	generate()
	binaryStaticContent = true
}

contracts {
	testMode = 'WebTestClient'
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option 'jakarta_omit'
				option '@generated=omit'
			}
		}
	}
}

tasks.named('contractTest') {
	useJUnitPlatform()
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
